// Generated by CoffeeScript 1.7.1
(function() {
  var app;

  app = angular.module('demo', ['uto.flexbox']);

  app.directive('flexbox', function(flexboxConfigService) {
    return {
      restrict: 'E',
      link: function(scope, elm, attrs) {
        return elm.bind('click', function(e) {
          if (elm[0] === e.target || elm[0] === e.srcElement || elm[0] === e.toElement) {
            console.log("click", elm[0]);
            flexboxConfigService.open(elm, attrs);
            return scope.$apply();
          }
        });
      }
    };
  });

  app.directive('flexboxConfig', function(flexboxConfigService) {
    return {
      restrict: 'E',
      template: "<form name='formi' class='flexbox-config'> <label>Columns: </label><input ng-model='form.form.column' type='checkbox'/><br /> <label>Flex : </label><input ng-model='form.form.flex' type='number'/><br /> <label>Text-align:</label> <select ng-model='form.form.justify'> <option value='start'>Start</option> <option value='end'>End</option> <option value='center'>Center</option> </select><br /> <label>Align-items:</label> <select ng-model='form.form.align'> <option value=''></option> <option value='start'>Start</option> <option value='end'>End</option> <option value='center'>Center</option> <option value='stretch'>Stretch</option> </select><br /> <label>Self-align:</label> <select ng-model='form.form.self'> <option value='start'>Start</option> <option value='end'>End</option> <option value='center'>Center</option> <option value='stretch'>Stretch</option> </select><br /> <button ng-click='form.close()'>Close</button> <button ng-click='form.addParent()' class='ng-hide'>Add a parent</button> <button ng-click='form.addChild()'>Add a child</button> <button ng-click='form.addSibling()'>Add a sister</button> </form>",
      link: function(scope, elm, attr) {}
    };
  });

  app.controller('FlexboxConfigCtrl', function($scope, flexboxConfigService) {
    return $scope.form = flexboxConfigService;
  });

  app.factory('flexboxConfigService', function($rootScope, $compile) {
    var $scope, attrs, elm;
    $scope = $rootScope.$new(true);
    $scope.form = {};
    elm = attrs = void 0;
    $scope.$watch('form.column', function(newValue) {
      if ((newValue != null) && newValue === true) {
        return attrs.$set('column', '');
      } else if ((newValue != null) && newValue === false) {
        return attrs.$set('column');
      }
    });
    $scope.$watch('form.flex', function(newValue) {
      if ((newValue != null) && newValue >= 0) {
        return attrs.$set('flex', newValue);
      } else if ((newValue != null) && !newValue >= 0) {
        return attrs.$set('flex');
      }
    });
    angular.forEach(["align", "justify", "self"], function(key) {
      return $scope.$watch("form." + key, function(newValue) {
        if ((newValue != null) && newValue.length > 0) {
          attrs.$set(key, newValue);
        }
        if ((newValue != null) && !newValue.length > 0) {
          return attrs.$set(key);
        }
      });
    });
    $scope.addParent = function() {
      var parent;
      if (elm != null) {
        parent = $compile(angular.element("<flexbox flex='1'><div class='hello'>Hello</div></flexbox>"))(elm.scope());
        parent[0].parentNode = elm[0].parentNode;
        elm[0].parentNode = parent[0];
      }
      return $scope;
    };
    $scope.addSibling = function() {
      var sibling;
      if (elm != null) {
        sibling = $compile(angular.element("<flexbox flex='1'><div class='hello'>Hello</div></flexbox>"))(elm.scope());
        elm.parent().prepend(sibling);
      }
      return $scope;
    };
    $scope.addChild = function() {
      var child;
      if (elm != null) {
        child = $compile(angular.element("<flexbox flex='1'><div class='hello'>Hello</div></flexbox>"))(elm.scope());
        elm.prepend(child);
      }
      return $scope;
    };
    $scope.open = function(_elm_, _attrs_) {
      if (elm != null) {
        elm.removeClass('selected');
      }
      elm = _elm_;
      elm.addClass('selected');
      attrs = _attrs_;
      $scope._isOpen = true;
      angular.forEach(["self", "align", "justify"], function(key) {
        if (angular.isString(attrs.$attr[key])) {
          return $scope.form[key] = elm.attr(key);
        } else {
          return $scope.form[key] = '';
        }
      });
      if (angular.isString(attrs.$attr["flex"])) {
        $scope.form["flex"] = elm.attr("flex") >> 0;
      } else {
        $scope.form["flex"] = null;
      }
      if (angular.isString(attrs.$attr["column"])) {
        $scope.form["column"] = true;
      } else {
        $scope.form['column'] = false;
      }
      return $scope;
    };
    $scope.close = function() {
      return $scope._isOpen = false;
    };
    $scope.isOpen = function() {
      return !!$scope._isOpen;
    };
    return $scope;
  });

}).call(this);
